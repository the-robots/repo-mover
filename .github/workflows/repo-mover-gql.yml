name: Migrate Repository - GQL

on:
  workflow_dispatch:
    inputs:
      source_org:
        description: 'Source organization'
        required: true
      target_org:
        description: 'Target organization'
        required: true
      repo_name:
        description: 'Repository name'
        required: true

jobs:
  migrate:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Repository
        uses: actions/checkout@v3

      - name: Install GPG and Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg jq

      - name: Decrypt Private Key
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          gpg --batch --yes --passphrase "$GPG_PASSPHRASE" \
            -o private-key.pem \
            -d .github/keys/repo-sidewinder.2024-10-29.private-key.pem.gpg

      - name: Install Octokit Dependencies
        run: npm install @octokit/app@12.0.3 @octokit/auth-app@3.0.0

      - name: Set GH_TOKEN Environment Variable
        run: |
          echo "Setting GH_TOKEN..."
          echo "GH_TOKEN=${{ secrets.PAT_TOKEN }}" >> $GITHUB_ENV

      - name: Fetch Organization ID
        id: org_id
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "Fetching the global ID of the target organization..."
          ORG_ID=$(curl -X POST -H "Authorization: Bearer $GH_TOKEN" -H "Content-Type: application/json" \
          -d '{"query": "query { organization(login: \"'${{ inputs.target_org }}'\") { id } }"}' https://api.github.com/graphql | jq -r '.data.organization.id')
          echo "ORG_ID=$ORG_ID" >> $GITHUB_ENV

      - name: Initiate Migration with GraphQL
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
          ORG_ID: ${{ steps.org_id.outputs.ORG_ID }}
        run: |
          echo "Initiating migration with GraphQL..."
          curl -X POST -H "Authorization: Bearer $GH_TOKEN" -H "Content-Type: application/json" \
          -d '{
            "query": "mutation { createMigrationSource(input: { name: \"${{ inputs.repo_name }}\", url: \"https://github.com/${{ inputs.source_org }}/${{ inputs.repo_name }}\", ownerId: \"$ORG_ID\", type: GITHUB_ARCHIVE }) { migrationSource { id } } }"
          }' https://api.github.com/graphql

      - name: Monitor Migration Status (optional)
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Placeholder for monitoring migration completion
          echo "Checking migration status..."
          # Add code to query the migration status using GraphQL if needed

      - name: Cleanup
        run: rm -f private-key.pem
